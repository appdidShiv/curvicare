openapi: 3.0.3
info:
  title: curvicare
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1'
paths:
  /api/v1/dietician/diet/assign:
    post:
      summary: 'Assign Diet'
      operationId: assignDiet
      description: 'This API is used to assign diet to user'
      parameters: []
      responses: {  }
      tags:
        - 'Dietician AssignDiet'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 4
                diet:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["reiciendis","sit"]'
              required:
                - user_id
                - diet
      security: []
  /api/v1/dietician/diet/assigned:
    post:
      summary: 'Get Assigned Diet'
      operationId: getAssignedDiet
      description: 'This API is used to get assigned diet to user by date'
      parameters: []
      responses: {  }
      tags:
        - 'Dietician AssignDiet'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 5
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-06-26T17:04:26'
              required:
                - user_id
                - date
      security: []
  /api/v1/dietician/login:
    post:
      summary: Login
      operationId: login
      description: "This endpoint is used to authenticate dietician by token .\nif dietician is not found in database it will return error"
      parameters: []
      responses: {  }
      tags:
        - 'Dietician Auth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: arvel.kuhic@example.com
                password:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - email
                - password
      security: []
  /api/v1/dietician:
    get:
      summary: 'Dietician Profile'
      operationId: dieticianProfile
      description: 'This endpoint is used to get dietician profile'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Basic'
      security: []
  /api/v1/dietician/update:
    post:
      summary: 'Update Dietician Profile'
      operationId: updateDieticianProfile
      description: 'This endpoint is used to update dietician profile'
      parameters: []
      responses: {  }
      tags:
        - 'Dietician Basic'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fyyomkvdizm
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 512 kilobytes.'
                phone:
                  type: string
                  description: 'Must be 10 characters.'
                  example: mnkltmkoep
                address:
                  type: string
                  description: 'Must not be greater than 3000 characters.'
                  example: hzq
              required:
                - name
                - phone
                - address
      security: []
  '/api/v1/dietician/templates/{id}':
    get:
      summary: 'Get Templates'
      operationId: getTemplates
      description: "This endpoint is used to get templates\nYou can also get single template by id\nif id is not provided, all templates will be returned\nif id is provided, single template will be returned with its recipes"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Basic'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: officiis
  /api/v1/dietician/recipes:
    get:
      summary: 'Get Recipes'
      operationId: getRecipes
      description: "This endpoint is used to get recipes (paginated)\nYou can also search recipes by name using query parameter q"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Basic'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: uhkwgvtakzfrglnastwcnk
      security: []
  /api/v1/dietician/blogs:
    get:
      summary: 'Get Blogs'
      operationId: getBlogs
      description: 'This endpoint is used to get blogs (paginated)'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Basic'
      security: []
  /api/v1/dietician/get-agora-token:
    post:
      summary: 'Generate Agora Token'
      operationId: generateAgoraToken
      description: 'This used to generate agora token'
      parameters: []
      responses: {  }
      tags:
        - 'Dietician Basic'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_name:
                  type: string
                  description: ''
                  example: ut
                uid:
                  type: string
                  description: ''
                  example: itaque
              required:
                - channel_name
                - uid
      security: []
  /api/v1/dietician/call:
    get:
      summary: 'Call list'
      operationId: callList
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Call'
  /api/v1/dietician/call/start:
    post:
      summary: 'Start Call'
      operationId: startCall
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Dietician Call'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 7561.925753
                agora_channel_id:
                  type: string
                  description: ''
                  example: aut
              required:
                - user_id
                - agora_channel_id
  /api/v1/dietician/call/pick:
    post:
      summary: 'Pick Call'
      operationId: pickCall
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Dietician Call'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                call_id:
                  type: string
                  description: ''
                  example: nemo
              required:
                - call_id
  /api/v1/dietician/call/end:
    post:
      summary: 'End Call'
      operationId: endCall
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Dietician Call'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                call_id:
                  type: number
                  description: ''
                  example: 1102.764
              required:
                - call_id
  /api/v1/dietician/chat/active-list:
    get:
      summary: 'Get Active Chats'
      operationId: getActiveChats
      description: 'This endpoint is used to get active chats'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Chat'
  '/api/v1/dietician/chat/{id}/messages':
    get:
      summary: 'Get Messages'
      operationId: getMessages
      description: 'This endpoint is used to get messages (with pagination)'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Chat'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the chat.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/dietician/chat/send-message:
    post:
      summary: 'Send Message'
      operationId: sendMessage
      description: 'This endpoint is used to send message'
      parameters: []
      responses: {  }
      tags:
        - 'Dietician Chat'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: 'message is required if media or recipe_id is not present. This field is required when none of <code>media</code>, <code>recipe_id</code>, and <code>blog_id</code> are present. Must not be greater than 3000 characters.'
                  example: dkquadbkaiohukdpjoqrlp
                media:
                  type: array
                  description: 'This field is required when none of <code>message</code>, <code>recipe_id</code>, and <code>blog_id</code> are present.  Must be a file. Must not be greater than 2048 kilobytes.'
                  items:
                    type: string
                    format: binary
                recipe_id:
                  type: string
                  description: 'This field is required when none of <code>message</code>, <code>media</code>, and <code>blog_id</code> are present.'
                  example: null
                blog_id:
                  type: string
                  description: 'This field is required when none of <code>message</code>, <code>media</code>, and <code>recipe_id</code> are present.'
                  example: null
                reply_to:
                  type: string
                  description: ''
                  example: null
                chat_id:
                  type: string
                  description: ''
                  example: velit
              required:
                - chat_id
  '/api/v1/dietician/chat/weekly-report/{user}':
    get:
      summary: 'Weekly Report By User'
      operationId: weeklyReportByUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Chat'
    parameters:
      -
        in: path
        name: user
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/dietician/chat/tracker-report/{user}':
    get:
      summary: ''
      operationId: getApiV1DieticianChatTrackerReportUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Dietician Chat'
    parameters:
      -
        in: path
        name: user
        description: ''
        example: et
        required: true
        schema:
          type: string
  /api/broadcasting/auth:
    get:
      summary: 'Authenticate the request for channel access.'
      operationId: authenticateTheRequestForChannelAccess
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/user/login:
    post:
      summary: Login
      operationId: login
      description: "This endpoint is used to authenticate user by token or register new user\nif user is not found in database it will create new user and return it with token\nif user is found in database it will return old user with new token"
      parameters: []
      responses: {  }
      tags:
        - 'User Auth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The token of the user.'
                  example: '<<json web token>>'
                device_id:
                  type: string
                  description: 'The device id of the user.'
                  example: 1e6c1d3c2f5b4f6d8c3e5a7b9c6d8f5e
              required:
                - token
                - device_id
      security: []
  /api/v1/user/metadata:
    get:
      summary: Metadata
      operationId: metadata
      description: 'This endpoint is used to get metadata for the app like user goals, user activities, medical conditions etc.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user_activities:
                    -
                      id: 1
                      name: 'Light Activity'
                      image: null
                      status: active
                      created_at: '2022-11-11T16:31:16.000000Z'
                      updated_at: null
                    -
                      id: 2
                      name: 'Heavy Activity'
                      image: null
                      status: active
                      created_at: '2022-11-11T16:31:16.000000Z'
                      updated_at: null
                    -
                      id: 3
                      name: 'Modrate Activity'
                      image: null
                      status: active
                      created_at: '2022-11-11T16:31:16.000000Z'
                      updated_at: null
                  user_goals:
                    -
                      id: 1
                      name: 'Weight Loss'
                      image: null
                      status: active
                      created_at: '2022-11-11T16:31:43.000000Z'
                      updated_at: null
                    -
                      id: 2
                      name: 'Weight Gain'
                      image: null
                      status: active
                      created_at: '2022-11-11T16:31:43.000000Z'
                      updated_at: null
                    -
                      id: 3
                      name: 'Muscle building'
                      image: null
                      status: active
                      created_at: '2022-11-11T16:31:43.000000Z'
                      updated_at: null
                  medical_conditions:
                    -
                      id: 1
                      name: Diabetes
                      status: active
                      created_at: '2022-11-11T15:46:56.000000Z'
                      updated_at: null
                  expertise:
                    -
                      id: 1
                      name: 'Weight Loss'
                      slug: weight-loss
                      description: null
                      icon: null
                      status: active
                      created_at: '2022-12-08T17:45:43.000000Z'
                      updated_at: '2022-12-08T17:45:43.000000Z'
                    -
                      id: 2
                      name: Fitness
                      slug: fitness
                      description: null
                      icon: null
                      status: active
                      created_at: '2022-12-08T17:45:51.000000Z'
                      updated_at: '2022-12-08T17:45:51.000000Z'
                    -
                      id: 3
                      name: Diabetes
                      slug: diabetes
                      description: null
                      icon: null
                      status: active
                      created_at: '2022-12-14T11:22:00.000000Z'
                      updated_at: '2022-12-14T11:22:00.000000Z'
                    -
                      id: 4
                      name: PCOD
                      slug: pcod
                      description: null
                      icon: null
                      status: active
                      created_at: '2022-12-14T11:22:15.000000Z'
                      updated_at: '2022-12-14T11:22:15.000000Z'
                    -
                      id: 5
                      name: 'Weight Gain'
                      slug: weight-gain
                      description: null
                      icon: null
                      status: active
                      created_at: '2022-12-14T11:23:11.000000Z'
                      updated_at: '2022-12-14T11:23:11.000000Z'
                properties:
                  user_activities:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Light Activity'
                        image: null
                        status: active
                        created_at: '2022-11-11T16:31:16.000000Z'
                        updated_at: null
                      -
                        id: 2
                        name: 'Heavy Activity'
                        image: null
                        status: active
                        created_at: '2022-11-11T16:31:16.000000Z'
                        updated_at: null
                      -
                        id: 3
                        name: 'Modrate Activity'
                        image: null
                        status: active
                        created_at: '2022-11-11T16:31:16.000000Z'
                        updated_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Light Activity'
                        image:
                          type: string
                          example: null
                        status:
                          type: string
                          example: active
                        created_at:
                          type: string
                          example: '2022-11-11T16:31:16.000000Z'
                        updated_at:
                          type: string
                          example: null
                  user_goals:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Weight Loss'
                        image: null
                        status: active
                        created_at: '2022-11-11T16:31:43.000000Z'
                        updated_at: null
                      -
                        id: 2
                        name: 'Weight Gain'
                        image: null
                        status: active
                        created_at: '2022-11-11T16:31:43.000000Z'
                        updated_at: null
                      -
                        id: 3
                        name: 'Muscle building'
                        image: null
                        status: active
                        created_at: '2022-11-11T16:31:43.000000Z'
                        updated_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Weight Loss'
                        image:
                          type: string
                          example: null
                        status:
                          type: string
                          example: active
                        created_at:
                          type: string
                          example: '2022-11-11T16:31:43.000000Z'
                        updated_at:
                          type: string
                          example: null
                  medical_conditions:
                    type: array
                    example:
                      -
                        id: 1
                        name: Diabetes
                        status: active
                        created_at: '2022-11-11T15:46:56.000000Z'
                        updated_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Diabetes
                        status:
                          type: string
                          example: active
                        created_at:
                          type: string
                          example: '2022-11-11T15:46:56.000000Z'
                        updated_at:
                          type: string
                          example: null
                  expertise:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Weight Loss'
                        slug: weight-loss
                        description: null
                        icon: null
                        status: active
                        created_at: '2022-12-08T17:45:43.000000Z'
                        updated_at: '2022-12-08T17:45:43.000000Z'
                      -
                        id: 2
                        name: Fitness
                        slug: fitness
                        description: null
                        icon: null
                        status: active
                        created_at: '2022-12-08T17:45:51.000000Z'
                        updated_at: '2022-12-08T17:45:51.000000Z'
                      -
                        id: 3
                        name: Diabetes
                        slug: diabetes
                        description: null
                        icon: null
                        status: active
                        created_at: '2022-12-14T11:22:00.000000Z'
                        updated_at: '2022-12-14T11:22:00.000000Z'
                      -
                        id: 4
                        name: PCOD
                        slug: pcod
                        description: null
                        icon: null
                        status: active
                        created_at: '2022-12-14T11:22:15.000000Z'
                        updated_at: '2022-12-14T11:22:15.000000Z'
                      -
                        id: 5
                        name: 'Weight Gain'
                        slug: weight-gain
                        description: null
                        icon: null
                        status: active
                        created_at: '2022-12-14T11:23:11.000000Z'
                        updated_at: '2022-12-14T11:23:11.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Weight Loss'
                        slug:
                          type: string
                          example: weight-loss
                        description:
                          type: string
                          example: null
                        icon:
                          type: string
                          example: null
                        status:
                          type: string
                          example: active
                        created_at:
                          type: string
                          example: '2022-12-08T17:45:43.000000Z'
                        updated_at:
                          type: string
                          example: '2022-12-08T17:45:43.000000Z'
      tags:
        - 'User Basic'
      security: []
  /api/v1/user:
    get:
      summary: Profile
      operationId: profile
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
    post:
      summary: 'Update Profile'
      operationId: updateProfile
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Basic'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: eum
                dob:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-06-26T17:04:25'
                user_activity_id:
                  type: integer
                  description: ''
                  example: 5
                user_goal_id:
                  type: integer
                  description: ''
                  example: 8
                weight:
                  type: number
                  description: ''
                  example: 370.6569321
                height:
                  type: number
                  description: ''
                  example: 227.623932
                medical_conditions:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                gender:
                  type: string
                  description: 'Must be one of <code>male</code>, <code>female</code>, or <code>other</code>.'
                  example: voluptas
                target_weight:
                  type: number
                  description: ''
                  example: 1.57
              required:
                - name
                - dob
                - user_activity_id
                - user_goal_id
                - weight
                - height
                - gender
  /api/v1/user/quotes:
    get:
      summary: Quotes
      operationId: quotes
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
  '/api/v1/user/recipes/{id}':
    get:
      summary: Recipes
      operationId: recipes
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: repudiandae
  /api/v1/user/blogs:
    get:
      summary: Blogs
      operationId: blogs
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
  /api/v1/user/faqs:
    get:
      summary: 'Featured Faqs'
      operationId: featuredFaqs
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
  /api/v1/user/faq-categories:
    get:
      summary: 'Faq Categories'
      operationId: faqCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
  /api/v1/user/testimonials:
    get:
      summary: Testimonials
      operationId: testimonials
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
  /api/v1/user/packages:
    get:
      summary: Packages
      operationId: packages
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Basic'
  /api/v1/user/get-agora-token:
    post:
      summary: 'Generate Agora Token'
      operationId: generateAgoraToken
      description: 'This used to generate agora token'
      parameters: []
      responses: {  }
      tags:
        - 'User Basic'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_name:
                  type: string
                  description: ''
                  example: eaque
                uid:
                  type: string
                  description: ''
                  example: quia
              required:
                - channel_name
                - uid
      security: []
  /api/v1/user/call:
    get:
      summary: 'Call list'
      operationId: callList
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Call'
  /api/v1/user/call/start:
    post:
      summary: 'Start Call'
      operationId: startCall
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Call'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dietician_id:
                  type: number
                  description: ''
                  example: 1.57576011
                agora_channel_id:
                  type: string
                  description: ''
                  example: et
              required:
                - dietician_id
                - agora_channel_id
  /api/v1/user/call/pick:
    post:
      summary: 'Pick Call'
      operationId: pickCall
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Call'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                call_id:
                  type: string
                  description: ''
                  example: labore
              required:
                - call_id
  /api/v1/user/call/end:
    post:
      summary: 'End Call'
      operationId: endCall
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Call'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                call_id:
                  type: number
                  description: ''
                  example: 21209210.263
              required:
                - call_id
  /api/v1/user/chat/active:
    get:
      summary: 'Get Active Chat'
      operationId: getActiveChat
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      message: 'Hiii chetan'
                      user_id: 2
                      dietician: null
                      media:
                        -
                          id: 1
                          type: image
                          data: '{"image": ["uploads/image/image-685694294ff402b988c53fc346e19d5fb5f62f88e24.jpg", "uploads/image/image-176694294ff402b988c53fc346e19d5fb5f62f88e24.jpg"]}'
                          created_at: '2022-12-30T05:38:58.000000Z'
                      reply: null
                      created_at: '2022-12-30T05:38:58.000000Z'
                    -
                      id: 2
                      message: 'Hello '
                      user_id: null
                      dietician:
                        id: 3
                        name: 'Chetan Chadam'
                        image: images/dietician/img-516396d609d62ae537360a10547ba805bd7895a7b2.png
                      media: []
                      reply:
                        id: 1
                        message: 'Hiii chetan'
                        user_id: 2
                        media:
                          -
                            id: 1
                            type: image
                            data: '{"image": ["uploads/image/image-685694294ff402b988c53fc346e19d5fb5f62f88e24.jpg", "uploads/image/image-176694294ff402b988c53fc346e19d5fb5f62f88e24.jpg"]}'
                            created_at: '2022-12-30T05:38:58.000000Z'
                        created_at: '2022-12-30T05:38:58.000000Z'
                      created_at: '2022-12-30T05:38:58.000000Z'
                  links:
                    first: 'http://127.0.0.1:9000/api/v1/user/chat/active?page=1'
                    last: null
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    path: 'http://127.0.0.1:9000/api/v1/user/chat/active'
                    per_page: 15
                    to: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        message: 'Hiii chetan'
                        user_id: 2
                        dietician: null
                        media:
                          -
                            id: 1
                            type: image
                            data: '{"image": ["uploads/image/image-685694294ff402b988c53fc346e19d5fb5f62f88e24.jpg", "uploads/image/image-176694294ff402b988c53fc346e19d5fb5f62f88e24.jpg"]}'
                            created_at: '2022-12-30T05:38:58.000000Z'
                        reply: null
                        created_at: '2022-12-30T05:38:58.000000Z'
                      -
                        id: 2
                        message: 'Hello '
                        user_id: null
                        dietician:
                          id: 3
                          name: 'Chetan Chadam'
                          image: images/dietician/img-516396d609d62ae537360a10547ba805bd7895a7b2.png
                        media: []
                        reply:
                          id: 1
                          message: 'Hiii chetan'
                          user_id: 2
                          media:
                            -
                              id: 1
                              type: image
                              data: '{"image": ["uploads/image/image-685694294ff402b988c53fc346e19d5fb5f62f88e24.jpg", "uploads/image/image-176694294ff402b988c53fc346e19d5fb5f62f88e24.jpg"]}'
                              created_at: '2022-12-30T05:38:58.000000Z'
                          created_at: '2022-12-30T05:38:58.000000Z'
                        created_at: '2022-12-30T05:38:58.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        message:
                          type: string
                          example: 'Hiii chetan'
                        user_id:
                          type: integer
                          example: 2
                        dietician:
                          type: string
                          example: null
                        media:
                          type: array
                          example:
                            -
                              id: 1
                              type: image
                              data: '{"image": ["uploads/image/image-685694294ff402b988c53fc346e19d5fb5f62f88e24.jpg", "uploads/image/image-176694294ff402b988c53fc346e19d5fb5f62f88e24.jpg"]}'
                              created_at: '2022-12-30T05:38:58.000000Z'
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              type:
                                type: string
                                example: image
                              data:
                                type: string
                                example: '{"image": ["uploads/image/image-685694294ff402b988c53fc346e19d5fb5f62f88e24.jpg", "uploads/image/image-176694294ff402b988c53fc346e19d5fb5f62f88e24.jpg"]}'
                              created_at:
                                type: string
                                example: '2022-12-30T05:38:58.000000Z'
                        reply:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2022-12-30T05:38:58.000000Z'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://127.0.0.1:9000/api/v1/user/chat/active?page=1'
                      last:
                        type: string
                        example: null
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      path:
                        type: string
                        example: 'http://127.0.0.1:9000/api/v1/user/chat/active'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 2
      tags:
        - 'User Chat'
  /api/v1/user/chat/send-message:
    post:
      summary: 'Send Message'
      operationId: sendMessage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Chat'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: 'This field is required when <code>media</code> is not present. Must not be greater than 3000 characters.'
                  example: llqjnvetnasftxnkxi
                media:
                  type: array
                  description: 'This field is required when <code>message</code> is not present.  Must be a file. Must not be greater than 2048 kilobytes.'
                  items:
                    type: string
                    format: binary
                reply_to:
                  type: string
                  description: ''
                  example: null
  /api/v1/user/chat/mark-read:
    post:
      summary: ''
      operationId: postApiV1UserChatMarkRead
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Chat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chat_id:
                  type: string
                  description: ''
                  example: sequi
              required:
                - chat_id
      security: []
  /api/v1/user/diet:
    get:
      summary: 'Get Diet'
      operationId: getDiet
      description: "This API is used to get diet for user\nif days is not provided then it will return diet for next 7 days"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Diet'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                days:
                  type: integer
                  description: ''
                  example: 11
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-06-26T17:04:25'
      security: []
  /api/v1/user/like/toggle/blog:
    post:
      summary: 'Toggle Like Blog'
      operationId: toggleLikeBlog
      description: 'This endpoint is used to like/unlike a blog'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'You have successfully liked/un-liked {blog_title}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'You have successfully liked/un-liked {blog_title}'
      tags:
        - 'User Like'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blog_id:
                  type: integer
                  description: 'The id of the blog to like/unlike'
                  example: 1
              required:
                - blog_id
      security: []
  /api/v1/user/like/toggle/recipe:
    post:
      summary: 'Toggle Like for Recipe'
      operationId: toggleLikeForRecipe
      description: 'This endpoint is used to like/unlike a recipe'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'You have successfully liked/un-liked {recipe_title}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'You have successfully liked/un-liked {recipe_title}'
      tags:
        - 'User Like'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipe_id:
                  type: integer
                  description: 'The id of the recipe to like/unlike'
                  example: 1
              required:
                - recipe_id
      security: []
  /api/v1/user/subscription:
    get:
      summary: 'User Subscription'
      operationId: userSubscription
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Payment'
  /api/v1/user/subscription/create-order:
    post:
      summary: 'Create Order'
      operationId: createOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Payment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                package_id:
                  type: integer
                  description: ''
                  example: 5
                type:
                  type: string
                  description: 'Must be one of <code>new</code> or <code>renew</code>.'
                  example: renew
                currency:
                  type: string
                  description: 'Must be one of <code>INR</code> or <code>USD</code>.'
                  example: INR
                coupon_code:
                  type: string
                  description: 'Must be 255 characters.'
                  example: lsywsgpsrywexppvibfnzxzrirrfnysngxoyijfvjorbuovvqawfgeyubbrmgnmqozqqcwvoyhpwafcndgxfeptcnykhetcfyniqiepfkypabljqaxgffillpfwmeqzqnwngobsedbncnjzbowfrdsspyqudafkrevkffasnrvoymmyogwichsnsnkyzraollarhqrxpyjgisdnthzmygflqiqepkqgelapacgxwdpnoilwxxlluzcnngfokvto
                form_data:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - package_id
                - currency
                - form_data
  /api/v1/user/subscription/fetch-order:
    post:
      summary: 'Fetch Order'
      operationId: fetchOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Payment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pqixeduvjywpoqgsdyxhxpsqd
              required:
                - id
  /api/v1/user/support/get-questions:
    get:
      summary: 'Get Question'
      operationId: getQuestion
      description: 'This api will return predefined question of tickets'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Support'
  /api/v1/user/support/get-tickets:
    get:
      summary: 'Get Tickets'
      operationId: getTickets
      description: 'This api will return Ticket raised by user'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Support'
  /api/v1/user/support/raise-ticket:
    post:
      summary: 'Raise Ticket'
      operationId: raiseTicket
      description: 'This api will create a ticket'
      parameters: []
      responses: {  }
      tags:
        - 'User Support'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: number
                  description: ''
                  example: 1992587.6261
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Maxime ut repudiandae sit.'
              required:
                - question_id
                - description
  /api/v1/user/support/chat:
    get:
      summary: 'Get Chat'
      operationId: getChat
      description: 'This api will return message from user and support'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Support'
  /api/v1/user/support/send-message:
    post:
      summary: 'Send Message'
      operationId: sendMessage
      description: 'This api will send message to support'
      parameters: []
      responses: {  }
      tags:
        - 'User Support'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: 'This field is required when <code>file</code> is not present. Must not be greater than 2000 characters.'
                  example: pettuqdrh
                file:
                  type: string
                  format: binary
                  description: 'This field is required when <code>message</code> is not present.  Must be an image. Must not be greater than 2048 kilobytes.'
  /api/v1/user/tracker:
    get:
      summary: ''
      operationId: getApiV1UserTracker
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Tracker'
      security: []
  /api/v1/user/tracker/moods:
    get:
      summary: Moods
      operationId: moods
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Tracker'
  /api/v1/user/tracker/mood:
    get:
      summary: 'User Mood'
      operationId: userMood
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Tracker'
    post:
      summary: 'Store User Mood'
      operationId: storeUserMood
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Tracker'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mood:
                  type: integer
                  description: ''
                  example: 17
              required:
                - mood
  /api/v1/user/tracker/water:
    get:
      summary: 'User Steps'
      operationId: userSteps
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Tracker'
    post:
      summary: 'Store User Water'
      operationId: storeUserWater
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Tracker'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                water_amount:
                  type: number
                  description: ''
                  example: 5319377.00251
              required:
                - water_amount
  /api/v1/user/tracker/step:
    get:
      summary: 'User Steps'
      operationId: userSteps
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Tracker'
    post:
      summary: 'Store User Steps'
      operationId: storeUserSteps
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Tracker'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                step:
                  type: integer
                  description: ''
                  example: 7
              required:
                - step
  /api/v1/user/report:
    get:
      summary: 'Get Weekly Report'
      operationId: getWeeklyReport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Weekly Report'
  /api/v1/user/report/submit:
    post:
      summary: 'Submit Weekly Report'
      operationId: submitWeeklyReport
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'User Weekly Report'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                height:
                  type: number
                  description: ''
                  example: 25.2906
                chest:
                  type: number
                  description: ''
                  example: 24803.511928
                thighs:
                  type: number
                  description: ''
                  example: 18015.89161413
                images:
                  type: array
                  description: 'Must be an image. Must not be greater than 6000 kilobytes.'
                  items:
                    type: string
                    format: binary
              required:
                - height
                - chest
                - thighs
                - images
tags:
  -
    name: 'Dietician AssignDiet'
    description: "\nAPIs for Dietician to assign diet to user"
  -
    name: 'Dietician Auth'
    description: "\nAPIs for user authentication/registration\nAll auth related APIs are here"
  -
    name: 'Dietician Basic'
    description: ' @authenticated'
  -
    name: 'Dietician Call'
    description: ''
  -
    name: 'Dietician Chat'
    description: "\nAPIs for Dietician Chat"
  -
    name: Endpoints
    description: ''
  -
    name: 'User Auth'
    description: "\nAPIs for user authentication/registration\nAll auth related APIs are here"
  -
    name: 'User Basic'
    description: "\nAPIs for basic data"
  -
    name: 'User Call'
    description: ''
  -
    name: 'User Chat'
    description: "\nAPIs for User Chat"
  -
    name: 'User Diet'
    description: "\nAPIs for User to get diet"
  -
    name: 'User Like'
    description: "\nAPIs for User To Like/Unlike"
  -
    name: 'User Payment'
    description: "\nAPIs for User Payment"
  -
    name: 'User Support'
    description: "\nAPIs for Ticket/Chat support\n @authenticated"
  -
    name: 'User Tracker'
    description: "\nAPIs for user tracker eg. mood, steps, water"
  -
    name: 'User Weekly Report'
    description: ''
